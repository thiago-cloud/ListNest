# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Deploy Backend ListNest

on:
  push:
    branches: [ "main" ]
jobs:
 print-token:
    permissions: write-all
    name: print-token
    environment: dev
    # needs: pre-pkr
    runs-on: ubuntu-latest
  #build:
   # runs-on: ubuntu-latest

    # steps são etapas
    steps:
    - uses: actions/checkout@v4 # Faça o download do meu código para esse container
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17' # Versão do java
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml # -B package serve gerar um .jar
    - name: Listing contents
      run: ls -la ./target # Liste o que estar no diretório 1
    - name: Copiando arquivos para maquina virtual
      uses: appleboy/scp-action@master
      with:
        port: 22
        host: listnest.local
        username: root
        password: $${{ secrets.PASSWORD }}# E necessário definir a senha no git hub action em secrets
        source: "./target/listnest-0.0.1-SNAPSHOT"
        target: "/root/listnest/"
        
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      
